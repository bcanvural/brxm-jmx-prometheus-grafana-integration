#REPOSITORY
org_hippoecm_repository_Repository_QueryDurationMillisAverageLastHour
org_hippoecm_repository_Repository_DatabaseBundleGetAverageLastHourPerSecond
org_hippoecm_repository_Repository_DatabaseBundleGetDurationMillisAverageLastHour
org_hippoecm_repository_Repository_DatabaseBundleWriteAverageLastHourPerSecond
org_hippoecm_repository_Repository_DatabaseBundleWriteDurationMillisAverageLastHour
org_hippoecm_repository_Repository_QueriesLastHourPerSecond
org_hippoecm_repository_Repository_QueryDurationMillisAverageLastHour

org_hippoecm_repository_Repository_BundleCacheHitLastHourPerSecond
org_hippoecm_repository_Repository_BundleCacheMissLastHourPerSecond
org_hippoecm_repository_Repository_BundleCacheSizeMbLastHourAverage

#HST CACHE
org_onehippo_hst_Caching_CacheHitRate
org_onehippo_hst_Caching_CacheMissRate

org_onehippo_hst_Caching_FirstLevelCacheHitRate
org_onehippo_hst_Caching_FirstLevelCacheMissRate
org_onehippo_hst_Caching_FirstLevelCacheSize

#SESSION POOLS
org_onehippo_hst_SessionPool_MaxActive
org_onehippo_hst_SessionPool_NumActive

#JVM

jvm_memory_bytes_max
jvm_memory_bytes_used
jvm_threads_current
jvm_threads_peak

# Tomcat (Catalina)
Catalina_Connector_maxThreads (tomcat max threads)
Catalina_Manager_activeSessions (Number of active sessions at this moment)
Catalina_Manager_maxActive (maximum number of active sessions so far.) <- Observing this will probably tell us how many concurrent CMS users we will ever have. Good for sizing decisions!
Catalina_Manager_sessionMaxAliveTime (Longest time an expired session had been alive)
